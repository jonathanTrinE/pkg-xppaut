#include <math.h>
double BoxMuller;
int BoxMullerFlag;
double *c,*x,*xp,*s,*sp;
double drand48();
double norm()
{

  double fac,r,v1,v2;
  if(BoxMullerFlag==0){ 
    do {
      v1=2.0*drand48()-1.0;
      v2=2.0*drand48()-1.0;
      r=v1*v1+v2*v2;
    } while(r>=1.0);
    fac=sqrt(-2.0*log(r)/r);
    BoxMuller=v1*fac;
    BoxMullerFlag=1;
    return(v2*fac);
  }
  else {
    BoxMullerFlag=0;
    return(BoxMuller);
  }
}
rhs(double g,double a, double sig, double tau, int n)
{
  int i;
  double st=0;
  for(i=0;i<n;i++)
    st+=s[i];
  st=st/(double n);
  for(i=0;i<n;i++){
    c[i]=cos(x[i]);
    xp[i]=1-c[i]+(1+c[i])*(-a+g*st+sig*norm());
    sp[i]=exp(-20*(1+c[i]))*(1-s[i])-s[i]/tau;
  }
}
